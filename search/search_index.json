{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Graph Data Modeling with AI","text":"<p>Welcome to our website for Graph Data Modeling with AI.</p>"},{"location":"about/","title":"About The Graph Data Modeling Course","text":"<p>If there was one change I would make to college database curriculums, it would be to have students take a graph data modeling course before they took a course relational database.</p> <p>This sentiment is a reflection on over 30 years of working with data analysts, data engineers, data scientists, database administrators and software developers.  Learning relational databases creates the impressions that all databases have a limited ability to model the real world.  They teach that modeling relationships is complex and relationships are not first class citizens with their own properties.</p> <p>These misconceptions cause students to be overly cautious about modeling the real-world with precision.  Teaching graph data modeling first can help them learn that precise models of the world can give any organization a competitive advantage over their relational-focused competition.</p> <p>This book attempts to teach graph data as THE single most important modeling framework any database students has.</p>"},{"location":"about/#book-structure","title":"Book Structure","text":"<p>This book begins by introducing the foundational concepts we use in modeling the world with graphs.  This includes precise definitions of concepts such as nodes, edges, properties and paths.</p> <p>After we introduce the foundational concepts we enumerate some of the different types of graphs including describing graph structures that don't have the flexibility that we need to build production systems.</p> <p>Next, we introduce the labeled-property graph (LPG) data model and give some concrete examples of how it is used to model the world.</p>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"glossary/","title":"Glossary of Terms","text":""},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#term","title":"Term","text":"<p>This is the definition of the term.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"chapters/","title":"Graph Data Modeling - Table of Contents","text":""},{"location":"chapters/#chapter-1-introduction-to-graph-data-modeling","title":"Chapter 1: Introduction to Graph Data Modeling","text":""},{"location":"chapters/#what-is-a-graph-data-model","title":"What is a Graph Data Model?","text":""},{"location":"chapters/#why-is-graph-data-modeling-important","title":"Why is Graph Data Modeling Important?","text":""},{"location":"chapters/#data-information-and-knowledge","title":"Data, Information and Knowledge","text":""},{"location":"chapters/#the-knowledge-triangle","title":"The Knowledge Triangle","text":""},{"location":"chapters/#models-and-algorithms","title":"Models and Algorithms","text":""},{"location":"chapters/#case-study-page-rank","title":"Case Study: Page Rank","text":""},{"location":"chapters/#chapter-2-graph-data-modeling-concepts","title":"Chapter 2: Graph Data Modeling Concepts","text":""},{"location":"chapters/#nodes-and-edges","title":"Nodes and Edges","text":""},{"location":"chapters/#properties","title":"Properties","text":""},{"location":"chapters/#property-data-types","title":"Property Data Types","text":""},{"location":"chapters/#simple-types","title":"Simple Types","text":""},{"location":"chapters/#complex-types","title":"Complex Types","text":""},{"location":"chapters/#paths","title":"Paths","text":""},{"location":"chapters/#dependencies","title":"Dependencies","text":""},{"location":"chapters/#modeling-customers","title":"Modeling Customers","text":""},{"location":"chapters/#defining-customer","title":"Defining Customer","text":""},{"location":"chapters/#customers-as-individuals","title":"Customers as Individuals","text":""},{"location":"chapters/#customers-as-companies","title":"Customers as Companies","text":""},{"location":"chapters/#customers-as-organizations","title":"Customers as Organizations","text":"<p>Example: Selling to schools, governments and social networks</p>"},{"location":"chapters/#modeling-products","title":"Modeling Products","text":""},{"location":"chapters/#modeling-space","title":"Modeling Space","text":""},{"location":"chapters/#modeling-time","title":"Modeling Time","text":""},{"location":"chapters/#the-datetime-structure","title":"The DateTime Structure","text":""},{"location":"chapters/#time-trees","title":"Time Trees","text":""},{"location":"chapters/#years","title":"Years","text":""},{"location":"chapters/#months","title":"Months","text":""},{"location":"chapters/#days","title":"Days","text":""},{"location":"chapters/#hours","title":"Hours","text":""},{"location":"chapters/#minutes","title":"Minutes","text":""},{"location":"chapters/#seconds","title":"Seconds","text":""},{"location":"chapters/#milliseconds","title":"Milliseconds","text":""},{"location":"chapters/#financial-time","title":"Financial Time","text":""},{"location":"chapters/#exceptions","title":"Exceptions","text":""},{"location":"chapters/#daylight-savings-time","title":"Daylight Savings Time","text":""},{"location":"chapters/#modeling-concepts","title":"Modeling Concepts","text":""},{"location":"chapters/#knowledge-graphs","title":"Knowledge Graphs","text":""},{"location":"chapters/#skos","title":"SKOS","text":""},{"location":"chapters/#business-glossaries","title":"Business Glossaries","text":""},{"location":"chapters/#taxonomies","title":"Taxonomies","text":""},{"location":"chapters/#ontologies","title":"Ontologies","text":""},{"location":"chapters/#the-concept-node","title":"The Concept Node","text":""},{"location":"chapters/#labels","title":"Labels","text":""},{"location":"chapters/#broader-and-narrower-concepts","title":"Broader and Narrower Concepts","text":""},{"location":"chapters/#schemas","title":"Schemas","text":""},{"location":"chapters/#modeling-language","title":"Modeling Language","text":""},{"location":"chapters/#modeling-words","title":"Modeling Words","text":""},{"location":"chapters/#modeling-sentences","title":"Modeling Sentences","text":""},{"location":"chapters/#modeling-paragraphs","title":"Modeling Paragraphs","text":""},{"location":"chapters/#modeling-documents","title":"Modeling Documents","text":""},{"location":"chapters/#document-processing-pipelines","title":"Document Processing Pipelines","text":""},{"location":"chapters/#case-study-wordnet","title":"Case Study: WordNet","text":""},{"location":"chapters/#synonyms","title":"Synonyms","text":""},{"location":"chapters/#opposites","title":"Opposites","text":""},{"location":"chapters/#modeling-fraud","title":"Modeling Fraud","text":""},{"location":"chapters/#anti-money-laundering","title":"Anti-Money Laundering","text":""},{"location":"chapters/#finding-unusual-relationships","title":"Finding Unusual Relationships","text":""},{"location":"chapters/#modeling-healthcare","title":"Modeling Healthcare","text":""},{"location":"chapters/#modeling-patients","title":"Modeling Patients","text":""},{"location":"chapters/#modeling-the-spread-of-infectious-disease","title":"Modeling the Spread of Infectious Disease","text":""},{"location":"chapters/#modeling-healthcare-costs","title":"Modeling Healthcare Costs","text":""},{"location":"chapters/#modeling-value-based-care","title":"Modeling Value-Based Care","text":""},{"location":"chapters/#entity-resolution","title":"Entity Resolution","text":""},{"location":"chapters/#the-challenges-of-connecting-data","title":"The Challenges of Connecting Data","text":""},{"location":"chapters/#modeling-scenes","title":"Modeling Scenes","text":""},{"location":"chapters/#the-scene-graph","title":"The Scene Graph","text":""},{"location":"chapters/#modeling-business-rules","title":"Modeling Business Rules","text":""},{"location":"chapters/#decision-trees","title":"Decision Trees","text":""},{"location":"chapters/#validation-rules","title":"Validation Rules","text":""},{"location":"chapters/#_1","title":"Table of Contents","text":""},{"location":"chapters/#modeling-security-threats","title":"Modeling Security Threats","text":""},{"location":"chapters/#modeling-business-processes","title":"Modeling Business Processes","text":""},{"location":"chapters/#modeling-events","title":"Modeling Events","text":""},{"location":"chapters/#event-mining","title":"Event Mining","text":""},{"location":"chapters/#modeling-learning","title":"Modeling Learning","text":""},{"location":"chapters/#learning-graphs","title":"Learning Graphs","text":""},{"location":"chapters/#modeling-causality","title":"Modeling Causality","text":""},{"location":"chapters/#causal-graphs","title":"Causal Graphs","text":""},{"location":"chapters/#systems-thinking","title":"Systems Thinking","text":""},{"location":"chapters/#causality-and-data-flows","title":"Causality and Data Flows","text":""},{"location":"chapters/#modeling-metadata","title":"Modeling Metadata","text":""},{"location":"chapters/#what-is-metadata","title":"What is Metadata?","text":""},{"location":"chapters/#data-governance","title":"Data Governance","text":""},{"location":"chapters/#data-stewards","title":"Data Stewards","text":""},{"location":"chapters/#domains","title":"Domains","text":""},{"location":"chapters/#data-matching","title":"Data Matching","text":""},{"location":"chapters/#schema-matching","title":"Schema Matching","text":""},{"location":"chapters/#data-mapping","title":"Data Mapping","text":""},{"location":"chapters/#model-evolution","title":"Model Evolution","text":""},{"location":"chapters/#what-new-areas-should-you-model","title":"What New Areas Should You Model?","text":""},{"location":"chapters/#the-edge-of-chaos","title":"The Edge of Chaos","text":""},{"location":"chapters/#the-economics-benefits-of-model-complexity","title":"The Economics Benefits of Model Complexity","text":""},{"location":"chapters/#reference-frames","title":"Reference Frames","text":""},{"location":"chapters/#architecture-of-the-human-brain","title":"Architecture of the Human Brain","text":""},{"location":"chapters/#the-monty-python-framework","title":"The Monty Python Framework","text":""},{"location":"chapters/01-introduction/","title":"Chapter 1: Introduction to Graph Data Modeling","text":""},{"location":"chapters/01-introduction/#models-of-the-world","title":"Models of the World","text":""},{"location":"chapters/01-introduction/#what-is-a-graph-data-model","title":"What is a Graph Data Model?","text":""},{"location":"chapters/01-introduction/#why-is-graph-data-modeling-important","title":"Why is Graph Data Modeling Important?","text":""},{"location":"chapters/01-introduction/#data-information-and-knowledge","title":"Data, Information, and Knowledge","text":""},{"location":"chapters/01-introduction/#the-knowledge-triangle","title":"The Knowledge Triangle","text":""},{"location":"chapters/01-introduction/#from-sensor-data-to-concepts","title":"From Sensor Data To Concepts","text":""},{"location":"chapters/01-introduction/#models-and-algorithms","title":"Models and Algorithms","text":""},{"location":"chapters/01-introduction/#case-study-page-rank","title":"Case Study: Page Rank","text":"<p>A story about Google and the Page Rank algorithm developed at Stanford by Larry Page.</p>"},{"location":"chapters/01-introduction/#other-related-models","title":"Other Related Models","text":""},{"location":"chapters/01-introduction/#relational","title":"Relational","text":""},{"location":"chapters/01-introduction/#analytical","title":"Analytical","text":""},{"location":"chapters/01-introduction/#key-value-stores","title":"Key Value Stores","text":""},{"location":"chapters/01-introduction/#document-models","title":"Document Models","text":""},{"location":"chapters/01-introduction/#the-iso-graph-query-language-gql","title":"The ISO Graph Query Language (GQL)","text":""},{"location":"chapters/01-introduction/#graph-models-and-llms","title":"Graph Models and LLMs","text":""},{"location":"chapters/01-introduction/#the-future-of-graph-databases","title":"The Future of Graph Databases","text":""},{"location":"chapters/02-concepts/","title":"Chapter 2: Graph Data Modeling Concepts","text":""},{"location":"chapters/02-concepts/#nodes-and-edges","title":"Nodes and Edges","text":""},{"location":"chapters/02-concepts/#properties","title":"Properties","text":""},{"location":"chapters/02-concepts/#property-data-types","title":"Property Data Types","text":""},{"location":"chapters/02-concepts/#simple-types","title":"Simple Types","text":""},{"location":"chapters/02-concepts/#complex-types","title":"Complex Types","text":""},{"location":"chapters/02-concepts/#paths","title":"Paths","text":""},{"location":"chapters/02-concepts/#dependencies","title":"Dependencies","text":""},{"location":"chapters/03-modeling-customers/","title":"Chapter 3: Modeling Customers","text":""},{"location":"chapters/03-modeling-customers/#defining-customer","title":"Defining Customer","text":""},{"location":"chapters/03-modeling-customers/#customers-as-individuals","title":"Customers as Individuals","text":""},{"location":"chapters/03-modeling-customers/#locations-and-addresses","title":"Locations and Addresses","text":""},{"location":"chapters/03-modeling-customers/#modeling-households","title":"Modeling Households","text":"<p>What is a \"household\"?</p> <p>Parents and children.</p> <p>Divorces and custody.</p> <p>Cohabitation and complex family relationships.</p>"},{"location":"chapters/03-modeling-customers/#customers-as-companies","title":"Customers as Companies","text":""},{"location":"chapters/03-modeling-customers/#customers-as-organizations","title":"Customers as Organizations","text":"<p>Example: Selling to schools, governments and social networks</p>"},{"location":"chapters/03-modeling-customers/#modeling-licenses","title":"Modeling Licenses","text":""},{"location":"chapters/03-modeling-customers/#detecting-abuse","title":"Detecting Abuse","text":""},{"location":"chapters/03-modeling-customers/#ip-address-and-vpns","title":"IP address and VPNs","text":""},{"location":"chapters/04-modeling-products/","title":"Chapter 4: Modeling Products","text":""},{"location":"chapters/04-modeling-products/#product-lists","title":"Product Lists","text":""},{"location":"chapters/04-modeling-products/#product-groupings","title":"Product Groupings","text":""},{"location":"chapters/04-modeling-products/#product-taxonomies","title":"Product Taxonomies","text":""},{"location":"chapters/04-modeling-products/#multiple-taxonomies","title":"Multiple Taxonomies","text":""},{"location":"chapters/04-modeling-products/#product-classification-tools","title":"Product Classification Tools","text":""},{"location":"chapters/04-modeling-products/#product-metadata","title":"Product Metadata","text":""},{"location":"chapters/05-modeling-space/","title":"Chapter 5: Modeling Space","text":""},{"location":"chapters/05-modeling-space/#challenges-of-modeling-space","title":"Challenges of Modeling Space","text":""},{"location":"chapters/05-modeling-space/#modeling-locations","title":"Modeling Locations","text":""},{"location":"chapters/05-modeling-space/#longitude-and-latitude","title":"Longitude and Latitude","text":""},{"location":"chapters/05-modeling-space/#distance-calculations","title":"Distance Calculations","text":""},{"location":"chapters/05-modeling-space/#modeling-addresses","title":"Modeling Addresses","text":""},{"location":"chapters/05-modeling-space/#modeling-cities-counties-and-states","title":"Modeling Cities, Counties and States","text":""},{"location":"chapters/05-modeling-space/#modeling-metropolitan-regions","title":"Modeling Metropolitan Regions","text":""},{"location":"chapters/05-modeling-space/#modeling-sale-regions","title":"Modeling Sale Regions","text":""},{"location":"chapters/05-modeling-space/#modeling-urban-and-rural-regions","title":"Modeling Urban and Rural Regions","text":""},{"location":"chapters/05-modeling-space/#case-study-social-determinants-of-health","title":"Case Study: Social Determinants of Health","text":""},{"location":"chapters/05-modeling-space/#modeling-roads","title":"Modeling Roads","text":""},{"location":"chapters/05-modeling-space/#calculating-the-shortest-path","title":"Calculating the Shortest Path","text":""},{"location":"chapters/05-modeling-space/#modeling-bus-routes","title":"Modeling Bus Routes","text":""},{"location":"chapters/05-modeling-space/#modeling-distances-from-providers","title":"Modeling Distances from Providers","text":""},{"location":"chapters/05-modeling-space/#a-sample-geospacial-model","title":"A Sample Geospacial Model","text":""},{"location":"chapters/06-modeling-time/","title":"Chapter 6: Modeling Time","text":""},{"location":"chapters/06-modeling-time/#the-datetime-structure","title":"The DateTime Structure","text":""},{"location":"chapters/06-modeling-time/#time-trees","title":"Time Trees","text":""},{"location":"chapters/06-modeling-time/#years","title":"Years","text":""},{"location":"chapters/06-modeling-time/#months","title":"Months","text":""},{"location":"chapters/06-modeling-time/#days","title":"Days","text":""},{"location":"chapters/06-modeling-time/#hours","title":"Hours","text":""},{"location":"chapters/06-modeling-time/#minutes","title":"Minutes","text":""},{"location":"chapters/06-modeling-time/#seconds","title":"Seconds","text":""},{"location":"chapters/06-modeling-time/#milliseconds","title":"Milliseconds","text":""},{"location":"chapters/06-modeling-time/#financial-time","title":"Financial Time","text":""},{"location":"chapters/06-modeling-time/#exceptions","title":"Exceptions","text":""},{"location":"chapters/06-modeling-time/#daylight-savings-time","title":"Daylight Savings Time","text":""},{"location":"chapters/07-modeling-concepts/","title":"Chapter 7: Modeling Concepts","text":""},{"location":"chapters/07-modeling-concepts/#knowledge-graphs","title":"Knowledge Graphs","text":""},{"location":"chapters/07-modeling-concepts/#skos","title":"SKOS","text":""},{"location":"chapters/07-modeling-concepts/#business-glossaries","title":"Business Glossaries","text":""},{"location":"chapters/07-modeling-concepts/#taxonomies","title":"Taxonomies","text":""},{"location":"chapters/07-modeling-concepts/#ontologies","title":"Ontologies","text":""},{"location":"chapters/07-modeling-concepts/#the-concept-node","title":"The Concept Node","text":""},{"location":"chapters/07-modeling-concepts/#labels","title":"Labels","text":""},{"location":"chapters/07-modeling-concepts/#preferred-labels","title":"Preferred Labels","text":""},{"location":"chapters/07-modeling-concepts/#alternate-labels","title":"Alternate Labels","text":""},{"location":"chapters/07-modeling-concepts/#broader-and-narrower-concepts","title":"Broader and Narrower Concepts","text":""},{"location":"chapters/07-modeling-concepts/#schemas","title":"Schemas","text":""},{"location":"chapters/08-modeling-language/","title":"Chapter 8: Modeling Language","text":""},{"location":"chapters/08-modeling-language/#natural-language-processing","title":"Natural Language Processing","text":""},{"location":"chapters/08-modeling-language/#modeling-words","title":"Modeling Words","text":""},{"location":"chapters/08-modeling-language/#modeling-sentences","title":"Modeling Sentences","text":""},{"location":"chapters/08-modeling-language/#modeling-paragraphs","title":"Modeling Paragraphs","text":""},{"location":"chapters/08-modeling-language/#modeling-documents","title":"Modeling Documents","text":""},{"location":"chapters/08-modeling-language/#document-processing-pipelines","title":"Document Processing Pipelines","text":""},{"location":"chapters/08-modeling-language/#case-study-wordnet","title":"Case Study: WordNet","text":""},{"location":"chapters/08-modeling-language/#synonyms","title":"Synonyms","text":""},{"location":"chapters/08-modeling-language/#opposites","title":"Opposites","text":""},{"location":"chapters/09-modeling-fraud/","title":"Chapter 9: Modeling Fraud and Investigations","text":""},{"location":"chapters/09-modeling-fraud/#fraud-waste-and-abuse","title":"Fraud, Waste and Abuse","text":""},{"location":"chapters/09-modeling-fraud/#anti-money-laundering","title":"Anti-Money Laundering","text":""},{"location":"chapters/09-modeling-fraud/#finding-unusual-relationships","title":"Finding Unusual Relationships","text":""},{"location":"chapters/09-modeling-fraud/#investigations","title":"Investigations","text":""},{"location":"chapters/10-modeling-healthcare/","title":"Chapter 10: Modeling Healthcare","text":""},{"location":"chapters/10-modeling-healthcare/#modeling-patients","title":"Modeling Patients","text":""},{"location":"chapters/10-modeling-healthcare/#modeling-the-spread-of-infectious-disease","title":"Modeling the Spread of Infectious Disease","text":""},{"location":"chapters/10-modeling-healthcare/#modeling-healthcare-costs","title":"Modeling Healthcare Costs","text":""},{"location":"chapters/10-modeling-healthcare/#modeling-value-based-care","title":"Modeling Value-Based Care","text":""},{"location":"chapters/11-entity-resolution/","title":"Chapter 11: Entity Resolution","text":""},{"location":"chapters/11-entity-resolution/#the-challenges-of-connecting-data","title":"The Challenges of Connecting Data","text":""},{"location":"chapters/11-entity-resolution/#counting-identical-attribute","title":"Counting Identical Attribute","text":""},{"location":"chapters/11-entity-resolution/#finding-similar-attributes","title":"Finding Similar Attributes","text":""},{"location":"chapters/11-entity-resolution/#case-study-soundex","title":"Case Study: SoundEx","text":""},{"location":"chapters/11-entity-resolution/#case-study-nicknames","title":"Case Study: Nicknames","text":""},{"location":"chapters/11-entity-resolution/#using-similarity","title":"Using Similarity","text":""},{"location":"chapters/11-entity-resolution/#case-study-embeddings-and-vector-stores","title":"Case Study: Embeddings and Vector Stores","text":""},{"location":"chapters/12-digital-twins/","title":"Chapter 12: Digital Twins","text":""},{"location":"chapters/12-digital-twins/#modeling-buildings","title":"Modeling Buildings","text":""},{"location":"chapters/12-digital-twins/#modeling-manufacturing-processes","title":"Modeling Manufacturing Processes","text":""},{"location":"chapters/12-digital-twins/#modeling-supply-chains","title":"Modeling Supply Chains","text":""},{"location":"chapters/13-modeling-scenes/","title":"Chapter 13: Modeling Scenes","text":""},{"location":"chapters/13-modeling-scenes/#the-scene-graph","title":"The Scene Graph","text":""},{"location":"chapters/13-modeling-scenes/#pixel-classification","title":"Pixel Classification","text":""},{"location":"chapters/13-modeling-scenes/#prediction-movement","title":"Prediction Movement","text":""},{"location":"chapters/13-modeling-scenes/#application-for-autonomous-vehicles","title":"Application for Autonomous Vehicles","text":""},{"location":"chapters/13-modeling-scenes/#applications-for-robotics","title":"Applications for Robotics","text":""},{"location":"chapters/14-modeling-rules/","title":"Chapter 14: Modeling Business Rules","text":"<p>One of the most important decisions in any software architecture is where we place the rules engine. - Scott Vandeleest </p>"},{"location":"chapters/14-modeling-rules/#rule-engines","title":"Rule Engines","text":""},{"location":"chapters/14-modeling-rules/#rules-and-workflows","title":"Rules and Workflows","text":""},{"location":"chapters/14-modeling-rules/#rule-modeling","title":"Rule Modeling","text":""},{"location":"chapters/14-modeling-rules/#business-process-modeling-notation","title":"Business Process Modeling Notation","text":""},{"location":"chapters/14-modeling-rules/#decision-trees","title":"Decision Trees","text":""},{"location":"chapters/14-modeling-rules/#validation-rules","title":"Validation Rules","text":""},{"location":"chapters/14-modeling-rules/#data-mining","title":"Data Mining","text":""},{"location":"chapters/14-modeling-rules/#rule-execution","title":"Rule Execution","text":""},{"location":"chapters/14-modeling-rules/#exchanging-rules","title":"Exchanging Rules","text":""},{"location":"chapters/15-modeling-code/","title":"Chapter 15: Modeling Code","text":"<ul> <li>Overview of network graphs and their relevance in software engineering.</li> <li>Why network graphs provide unique insights into code structure and behavior.</li> <li>Benefits of graph-based analysis for developers (e.g., debugging, performance optimization, and testing).</li> </ul>"},{"location":"chapters/15-modeling-code/#core-concepts-of-code-graphs","title":"Core Concepts of Code Graphs","text":"<ul> <li>Nodes and Edges: Representing Code Elements<ul> <li>Nodes as functions, classes, or modules.</li> <li>Edges as relationships (e.g., calls, dependencies, data flow).</li> </ul> </li> <li>Directed vs. Undirected Graphs<ul> <li>Understanding the directionality of relationships in code.</li> </ul> </li> <li>Weighted Edges<ul> <li>Representing metrics like frequency of calls, execution time, or code complexity.</li> </ul> </li> </ul>"},{"location":"chapters/15-modeling-code/#call-graph-modeling","title":"Call Graph Modeling","text":"<p>Software can be modeled as a call graph.  Each software function can be modeled as a node in a graph.  If a function calls another function, an edge is created between those functions.  If function A calls function B we can say that A may depend on function B. If function B has a bug, then we might determine that function A also has this bug as well as all other functions that depend on function A.</p> <ul> <li>Definition and Purpose<ul> <li>A graph where nodes represent functions and edges represent function calls.</li> </ul> </li> <li>Applications<ul> <li>Identifying dead code or unused functions.</li> <li>Optimizing recursive or heavily called functions.</li> </ul> </li> <li>Creating Call Graphs<ul> <li>Tools for generating call graphs from codebases.</li> <li>Examples of languages or frameworks (e.g., Python's <code>pycallgraph</code> or Java's <code>javacg</code>).</li> </ul> </li> <li>Analyzing Call Graphs<ul> <li>Metrics: Depth, breadth, and connectivity of the graph.</li> <li>Detecting circular dependencies.</li> </ul> </li> <li>Case Study: Debugging with Call Graphs<ul> <li>Walkthrough of using a call graph to resolve a real-world problem.</li> </ul> </li> </ul>"},{"location":"chapters/15-modeling-code/#text-coverage-graphs","title":"Text Coverage Graphs**","text":"<ul> <li>Definition and Importance<ul> <li>Modeling relationships between text (e.g., comments, documentation) and code elements.</li> </ul> </li> <li>Applications<ul> <li>Tracking which parts of the code are well-documented.</li> <li>Ensuring test cases cover all branches and lines of code.</li> </ul> </li> <li>Building Text Coverage Graphs<ul> <li>Representing links between test cases, functions, and documentation.</li> <li>Tools and frameworks for text-to-code mapping.</li> </ul> </li> <li>Analyzing Coverage<ul> <li>Identifying gaps in documentation or testing.</li> <li>Strategies to improve coverage (e.g., automated tools for generating missing links).</li> </ul> </li> </ul>"},{"location":"chapters/15-modeling-code/#integrating-multiple-graphs","title":"Integrating Multiple Graphs","text":"<ul> <li>Combining call graphs with text coverage graphs.</li> <li>Visualizing interdependencies between code execution and documentation/testing.</li> <li>Examples of hybrid graphs for holistic code analysis.</li> </ul>"},{"location":"chapters/15-modeling-code/#graph-based-code-quality-metrics","title":"Graph-Based Code Quality Metrics","text":"<ul> <li>Key Metrics<ul> <li>Cyclomatic complexity.</li> <li>Code churn and its representation in graphs.</li> <li>Hotspots: Functions or modules with high connectivity or execution frequency.</li> </ul> </li> <li>Using Metrics for Refactoring<ul> <li>Prioritizing areas for improvement based on graph insights.</li> </ul> </li> </ul>"},{"location":"chapters/15-modeling-code/#tools-for-graph-based-code-analysis","title":"Tools for Graph-Based Code Analysis","text":"<ul> <li>Overview of popular tools and libraries for building and analyzing code graphs.<ul> <li>Static analysis tools (e.g., Graphviz, Doxygen).</li> <li>Dynamic analysis tools (e.g., Jaeger for distributed systems).</li> </ul> </li> <li>Integrating graph analysis into CI/CD pipelines.</li> </ul>"},{"location":"chapters/15-modeling-code/#case-studies","title":"Case Studies","text":"<ul> <li>Example 1: Using Call Graphs for Performance Optimization.</li> <li>Example 2: Ensuring Comprehensive Test Coverage with Text Coverage Graphs.</li> <li>Example 3: Visualizing Large Legacy Codebases with Hybrid Graphs.</li> </ul>"},{"location":"chapters/15-modeling-code/#future-directions","title":"Future Directions","text":"<ul> <li>Advanced use cases: Predictive modeling and AI-driven refactoring using code graphs.</li> <li>Real-time visualization of code execution graphs in debugging tools.</li> <li>Collaboration and version control integration with graph modeling.</li> </ul>"},{"location":"chapters/15-modeling-code/#hands-on-exercises","title":"Hands-On Exercises","text":"<ul> <li>Exercise 1: Generate and analyze a call graph for a small project.</li> <li>Exercise 2: Create a text coverage graph linking test cases to code functions.</li> <li>Exercise 3: Combine call graphs and text coverage graphs for a holistic analysis.</li> <li>Exercise 4: Use graph metrics to identify and refactor a code hotspot.</li> </ul>"},{"location":"chapters/15-modeling-code/#conclusion","title":"Conclusion**","text":"<ul> <li>Recap of the value of modeling code with network graphs.</li> <li>Encouragement to integrate graph-based analysis into everyday development practices.</li> </ul>"},{"location":"chapters/16-modeling-security-threats/","title":"Chapter 16: Modeling Security Threats","text":""},{"location":"chapters/16-modeling-security-threats/#modeling-servers","title":"Modeling Servers","text":""},{"location":"chapters/16-modeling-security-threats/#modeling-networks","title":"Modeling Networks","text":""},{"location":"chapters/16-modeling-security-threats/#modeling-threats","title":"Modeling Threats","text":""},{"location":"chapters/16-modeling-security-threats/#threat-prioritization","title":"Threat Prioritization","text":""},{"location":"chapters/16-modeling-security-threats/#vulnerability-assessment","title":"Vulnerability Assessment","text":""},{"location":"chapters/16-modeling-security-threats/#modeling-person-roles","title":"Modeling Person Roles","text":""},{"location":"chapters/16-modeling-security-threats/#monitoring-agents","title":"Monitoring Agents","text":""},{"location":"chapters/16-modeling-security-threats/#modeling-unusual-data-movement","title":"Modeling Unusual Data Movement","text":""},{"location":"chapters/17-modeling-processes/","title":"Chapter 17: Modeling Business Processes","text":""},{"location":"chapters/17-modeling-processes/#modeling-events","title":"Modeling Events","text":""},{"location":"chapters/17-modeling-processes/#event-mining","title":"Event Mining","text":""},{"location":"chapters/17-modeling-processes/#events-and-workflows","title":"Events and Workflows","text":""},{"location":"chapters/17-modeling-processes/#event-logs","title":"Event Logs","text":""},{"location":"chapters/18-modeling-learning/","title":"Chapter 18: Modeling Learning","text":""},{"location":"chapters/18-modeling-learning/#learning-graphs","title":"Learning Graphs","text":""},{"location":"chapters/18-modeling-learning/#concept-dependency-analysis","title":"Concept Dependency Analysis","text":""},{"location":"chapters/18-modeling-learning/#concept-models","title":"Concept Models","text":""},{"location":"chapters/18-modeling-learning/#content-models","title":"Content Models","text":""},{"location":"chapters/18-modeling-learning/#learning-paths","title":"Learning Paths","text":""},{"location":"chapters/18-modeling-learning/#recommending-concept-paths","title":"Recommending Concept Paths","text":""},{"location":"chapters/18-modeling-learning/#recommending-content","title":"Recommending Content","text":""},{"location":"chapters/18-modeling-learning/#intelligent-textbooks","title":"Intelligent Textbooks","text":""},{"location":"chapters/19-modeling-causality/","title":"Chapter 19: Modeling Causality","text":""},{"location":"chapters/19-modeling-causality/#correlation-vs-causation","title":"Correlation vs. Causation","text":""},{"location":"chapters/19-modeling-causality/#causal-graphs","title":"Causal Graphs","text":""},{"location":"chapters/19-modeling-causality/#systems-thinking","title":"Systems Thinking","text":""},{"location":"chapters/19-modeling-causality/#causality-and-data-flows","title":"Causality and Data Flows","text":""},{"location":"chapters/20-modeling-linage/","title":"Chapter 20: Modeling Linage","text":""},{"location":"chapters/20-modeling-linage/#what-is-linage-and-provence","title":"What is Linage and Provence?","text":""},{"location":"chapters/20-modeling-linage/#the-who-did-what-to-an-entity-model","title":"The Who Did What to an Entity Model","text":""},{"location":"chapters/20-modeling-linage/#entity","title":"Entity","text":"<p>An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary.</p>"},{"location":"chapters/20-modeling-linage/#activity","title":"Activity","text":"<p>An activity is something that occurs over a period of time and acts upon or with entities.</p> <p>Activities may include consuming, processing, transforming, modifying, relocating, using, or generating entities. [Detailed specification] Just as entities cover a broad range of notions, activities can cover a broad range of notions: information processing activities may for example move, copy, or duplicate digital entities; physical activities can include driving a car between two locations or printing a book.</p>"},{"location":"chapters/20-modeling-linage/#agent","title":"Agent","text":"<p>An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. </p>"},{"location":"chapters/20-modeling-linage/#the-dm-prov-reference-model","title":"The DM-Prov Reference Model","text":"<p>W3C DM Prov</p>"},{"location":"chapters/21-metadata-modeling/","title":"Chapter 21: Modeling Metadata","text":""},{"location":"chapters/21-metadata-modeling/#what-is-metadata","title":"What is Metadata?","text":""},{"location":"chapters/21-metadata-modeling/#data-governance","title":"Data Governance","text":""},{"location":"chapters/21-metadata-modeling/#data-stewards","title":"Data Stewards","text":""},{"location":"chapters/21-metadata-modeling/#domains","title":"Domains","text":""},{"location":"chapters/21-metadata-modeling/#data-matching","title":"Data Matching","text":""},{"location":"chapters/21-metadata-modeling/#schema-matching","title":"Schema Matching","text":""},{"location":"chapters/21-metadata-modeling/#data-mapping","title":"Data Mapping","text":""},{"location":"chapters/22-modeling-supply-chains/","title":"Chapter 22: Modeling Supply Chains","text":""},{"location":"chapters/22-modeling-supply-chains/#inventory-management","title":"Inventory Management","text":""},{"location":"chapters/22-modeling-supply-chains/#alternate-suppliers","title":"Alternate Suppliers","text":""},{"location":"chapters/22-modeling-supply-chains/#supply-chain-disruption","title":"Supply Chain Disruption","text":""},{"location":"chapters/22-modeling-supply-chains/#transportation-networks","title":"Transportation Networks","text":""},{"location":"chapters/23-bitemporal-modeling/","title":"Chapter 23: Bitemporal Modeling","text":""},{"location":"chapters/23-bitemporal-modeling/#what-is-a-bitemporal-graph","title":"What is a Bitemporal Graph","text":""},{"location":"chapters/23-bitemporal-modeling/#real-world-time","title":"Real World Time","text":""},{"location":"chapters/23-bitemporal-modeling/#system-time","title":"System Time","text":""},{"location":"chapters/24-advanced-topics/","title":"Chapter 24: Advanced Topics","text":""},{"location":"chapters/24-advanced-topics/#architectural-tradeoff-analysis","title":"Architectural Tradeoff Analysis","text":""},{"location":"chapters/24-advanced-topics/#graph-training","title":"Graph Training","text":""},{"location":"chapters/24-advanced-topics/#performance","title":"Performance","text":""},{"location":"chapters/24-advanced-topics/#transactional-integrity","title":"Transactional Integrity","text":""},{"location":"chapters/24-advanced-topics/#scalability","title":"Scalability","text":""},{"location":"chapters/24-advanced-topics/#sustainability","title":"Sustainability","text":""},{"location":"chapters/24-advanced-topics/#graph-storytelling","title":"Graph Storytelling","text":""},{"location":"chapters/25-model-evolution/","title":"Chapter 25: Model Evolution","text":""},{"location":"chapters/25-model-evolution/#what-areas-should-you-model-next","title":"What Areas Should You Model Next?","text":""},{"location":"chapters/25-model-evolution/#complex-adaptive-systems","title":"Complex Adaptive Systems","text":""},{"location":"chapters/25-model-evolution/#the-edge-of-chaos","title":"The Edge of Chaos","text":""},{"location":"chapters/25-model-evolution/#the-economics-benefits-of-model-complexity","title":"The Economics Benefits of Model Complexity","text":""},{"location":"chapters/25-model-evolution/#cost-benefit-tradeoff-analysis","title":"Cost Benefit Tradeoff Analysis","text":""},{"location":"chapters/25-model-evolution/#initial-project-costs","title":"Initial Project Costs","text":""},{"location":"chapters/25-model-evolution/#ongoing-project-costs","title":"Ongoing Project Costs","text":""},{"location":"chapters/25-model-evolution/#network-effects-of-enterprise-knowledge-graphs","title":"Network Effects of Enterprise Knowledge Graphs","text":""},{"location":"chapters/26-brain/","title":"Chapter 26: Modeling Intelligence: The Brain and Reference Frames","text":""},{"location":"chapters/26-brain/#architecture-of-the-human-brain","title":"Architecture of the Human Brain","text":""},{"location":"chapters/26-brain/#jeff-hawkins-1000-brains-theory","title":"Jeff Hawkins' 1000 Brains Theory","text":""},{"location":"chapters/26-brain/#cortical-columns","title":"Cortical Columns","text":""},{"location":"chapters/26-brain/#grid-cells","title":"Grid Cells","text":""},{"location":"chapters/26-brain/#place-cells","title":"Place Cells","text":""},{"location":"chapters/26-brain/#multiple-representations","title":"Multiple Representations","text":""},{"location":"chapters/26-brain/#voting","title":"Voting","text":""},{"location":"chapters/26-brain/#sensory-motor-networks","title":"Sensory-Motor Networks","text":""},{"location":"chapters/26-brain/#reference-frames","title":"Reference Frames","text":""},{"location":"chapters/26-brain/#the-monty-python-framework","title":"The Monty Python Framework","text":""},{"location":"chapters/26-brain/#graph-models-and-the-future-of-ai","title":"Graph Models and the Future of AI","text":""},{"location":"chapters/27-ai-futures/","title":"Chapter 27: AI and the Future of World Models","text":""},{"location":"prompts/01-course-description/","title":"Course Description","text":""},{"location":"prompts/01-course-description/#sample-prompt","title":"Sample Prompt","text":"<p>Prompt Text</p> <p>Please create a course description for the following outline as it might appear in a college course catalog.  Use Bloom's 2001 taxonomy as a guide.</p>"},{"location":"prompts/01-course-description/#response","title":"Response","text":"<p>Course Title: Graph Data Modeling</p>"},{"location":"prompts/01-course-description/#course-description_1","title":"Course Description","text":"<p>This course explores the foundational principles and advanced techniques of graph data modeling, to progressively develop students' skills in data modeling. Students will begin by understanding the fundamental concepts and terminology, then advance to applying graph modeling strategies across diverse domains, analyzing complex relationships, evaluating modeling trade-offs, and ultimately creating robust, domain-specific graph data models.</p>"},{"location":"prompts/01-course-description/#learning-objectives","title":"Learning Objectives","text":"<p>Upon successful completion of the course, students will be able to:</p> <ol> <li>Remember key graph modeling concepts, including nodes, edges, properties, and paths.</li> <li>Understand the significance of graph data models in representing real-world systems and relationships.</li> <li>Apply graph modeling techniques to domains such as customer management, healthcare, supply chains, and fraud detection.</li> <li>Analyze domain-specific requirements to identify optimal graph structures and relationships.</li> <li>Evaluate trade-offs in architectural and performance considerations for graph models.</li> <li>Create advanced and scalable graph models for dynamic and evolving systems, including digital twins, causality, and metadata.</li> </ol>"},{"location":"prompts/01-course-description/#topics-covered","title":"Topics Covered","text":"<ul> <li>Foundations of Graph Data Modeling: Introduction to graph concepts, ISO GQL, and future trends.</li> <li>Core Concepts: Nodes, edges, properties, and paths.</li> <li>Domain-Specific Modeling: Customer data, products, healthcare, security threats, and fraud.</li> <li>Advanced Topics: Bitemporal modeling, causality, supply chains, and metadata.</li> <li>Future Directions: Model evolution, scalability, sustainability, and AI integration.</li> </ul>"},{"location":"prompts/01-course-description/#course-activities-and-assessments","title":"Course Activities and Assessments","text":"<ul> <li>Case studies on real-world graph applications.</li> <li>Hands-on exercises with graph databases and modeling tools.</li> <li>Group projects to design domain-specific graph models.</li> <li>Quizzes and exams assessing conceptual understanding and practical skills.</li> <li>A capstone project focused on creating a comprehensive graph model for a chosen domain.</li> </ul>"},{"location":"prompts/01-course-description/#recommended-audience","title":"Recommended Audience","text":"<p>This course is designed for students in computer science, data science, or related fields who are interested in mastering graph databases and their applications in modern data-driven systems.</p>"},{"location":"prompts/02-concept-enumeration/","title":"Concept Enumeration","text":""},{"location":"prompts/02-concept-enumeration/#prompt","title":"Prompt","text":"<p>Prompt Text</p> <p>Next, please create an enumerated list of the 150 key Concepts in this course on graph data modeling.  The list should be ordered from the simplest introductory concepts such as foundational concepts and definitions to the most complex topics at the end of the list.</p> <p>For each Concept, return a sequential ID and a ConceptLabel. The ConceptLabel should be under 30 characters long. Only use abbreviations in the ConceptLabel if the ConceptLabel is over 30 characters long. Make sure that each Concept only appears once on the list.  Avoid duplicate concepts.</p>"},{"location":"prompts/02-concept-enumeration/#sample-response","title":"Sample Response","text":"<ol> <li>Graph Data Model</li> <li>Node</li> <li>Edge</li> <li>Property</li> <li>Path</li> <li>Dependency</li> <li>Graph Schema</li> <li>Graph Query Lang</li> <li>ISO GQL</li> <li>Data vs Info</li> <li>Knowledge vs Data</li> <li>Model vs Algorithm</li> <li>LLM Integration</li> <li>Graph Futures</li> <li>Modeling Basics</li> <li>Directed Graphs</li> <li>Undirected Graphs</li> <li>Weighted Edges</li> <li>Unweighted Edges</li> <li>Multiplicity</li> <li>Indexing in Graphs</li> <li>Graph Traversal</li> <li>Pattern Matching</li> <li>Graph Merging</li> <li>Graph Splitting</li> <li>Graph Updates</li> <li>Graph Integrity</li> <li>Graph Constraints</li> <li>Graph Normalization</li> <li>Graph Aggregation</li> <li>Schema Evolution</li> <li>Graph Versioning</li> <li>Graph Data Import</li> <li>Graph Data Export</li> <li>Hierarchical Nodes</li> <li>Hyperedges</li> <li>Multi-Graphs</li> <li>Loops and Cycles</li> <li>Graph Isomorphism</li> <li>Graph Sampling</li> <li>Customer Node</li> <li>Individual Customer</li> <li>Corporate Customer</li> <li>Organizational Roles</li> <li>License Modeling</li> <li>Abuse Detection</li> <li>Fraud Indicators</li> <li>Customer Churn</li> <li>Customer Segments</li> <li>Customer Profiles</li> <li>Product Node</li> <li>Product Listing</li> <li>Product Group</li> <li>Taxonomy Node</li> <li>Multi-Taxonomy</li> <li>Product Classification</li> <li>Product Metadata</li> <li>SKU Linking</li> <li>Catalog Graph</li> <li>Product Bundles</li> <li>Location Node</li> <li>Address Node</li> <li>City Graph</li> <li>County Graph</li> <li>State Graph</li> <li>Metro Region</li> <li>Urban vs Rural</li> <li>Road Network</li> <li>Distance Calc</li> <li>Geo-Spatial Model</li> <li>Datetime Node</li> <li>Time Tree</li> <li>Financial Time</li> <li>Temporal Exceptions</li> <li>Temporal Indexes</li> <li>Temporal Queries</li> <li>Temporal Alignments</li> <li>Historical Graphs</li> <li>Future Projections</li> <li>Time Granularity</li> <li>Knowledge Graph</li> <li>SKOS Concepts</li> <li>Concept Node</li> <li>Labels &amp; Notation</li> <li>Broader Concepts</li> <li>Narrower Concepts</li> <li>Concept Schemas</li> <li>Semantic Layers</li> <li>Concept Hierarchies</li> <li>Semantic Reasoning</li> <li>NLP Integration</li> <li>Word Node</li> <li>Sentence Node</li> <li>Paragraph Node</li> <li>Document Node</li> <li>Doc Pipelines</li> <li>Text Classification</li> <li>Embeddings</li> <li>WordNet Case</li> <li>Text Summarization</li> <li>Fraud Patterns</li> <li>AML Modeling</li> <li>Unusual Relations</li> <li>Investigation Paths</li> <li>Suspicious Entities</li> <li>Threat Modeling</li> <li>Vulnerability Node</li> <li>Threat Prioritization</li> <li>Person Roles</li> <li>Data Movement Anomaly</li> <li>Patient Node</li> <li>Disease Spread</li> <li>Healthcare Costs</li> <li>Value-Based Care</li> <li>Entity Resolution</li> <li>Similar Attribute</li> <li>Similarity Metrics</li> <li>Duplicate Detection</li> <li>Merge Rules</li> <li>Identity Graph</li> <li>Building Models</li> <li>Manufacturing Graph</li> <li>Supply Chain Node</li> <li>Scene Graph</li> <li>Pixel Classes</li> <li>Motion Prediction</li> <li>Autonomous Vehicles</li> <li>Robotics Integration</li> <li>Process Graphs</li> <li>Workflow Events</li> <li>Rule Engine</li> <li>Rule Workflow</li> <li>Decision Tree</li> <li>Validation Rules</li> <li>Data Mining</li> <li>Rule Exchange</li> <li>Code Graphs</li> <li>Call Graph</li> <li>Coverage Graph</li> <li>Code Quality</li> <li>Learning Graphs</li> <li>Concept Dependency</li> <li>Content Models</li> <li>Learning Paths</li> <li>Concept Recommender</li> <li>Intelligent Textbooks</li> <li>Correlation vs Cause</li> <li>Causal Graph</li> <li>Data Lineage</li> <li>Graph Storytelling</li> </ol>"},{"location":"prompts/03-concept-dependencies/","title":"03 concept dependencies","text":"<p>Now, let's just focus on these 150 concepts. Please create a fully connected concept dependency graph for the 150 concepts in this course. In this step, for each Concept on this list below, create single line is a CSV file that list the other concepts on which it depends. If a concept depends on a specific concept that is not listed, then we will need to add it to the end of the list as a new concept. This will help us determine the teaching order of the Concepts.</p> <p>Return the new list as a CSV file using the following format:</p> <ol> <li>The first column in the CSV file is a numeric ConceptID you assigned in the list above.</li> <li>The second column is the ConceptLabel.</li> <li>The third column is a pipe-delimited list of the ConceptIDs that the concept depends upon.</li> </ol> <p>For example, the concept of a Dependency Graph depends on knowledge of nodes and edges:</p> <p>1,Graph Data Model 2,Node 3,Edge 4,Property 5,Path 6,Dependency Graph,2|3</p> <p>Check your results to make sure that all concepts are connected to at least one other concept unless they are a foundational concept like Graph Data Model, Node, Edge, Property or Path.</p> <p>Foundation Concepts are concepts that have no dependant concepts in this set. They have an empty third column.</p>"},{"location":"prompts/03-concept-dependencies/#response","title":"Response","text":"<pre><code>ConceptID,ConceptLabel,DependsOn\n1,Graph Data Model,\n2,Node,\n3,Edge,\n4,Property,\n5,Path,\n6,Dependency,2|3\n7,Graph Schema,1|4\n8,Graph Query Lang,1|2\n9,ISO GQL,8\n10,Data vs Information,1\n11,Knowledge vs Data,10\n12,Model vs Algorithm,11|2\n13,LLM Integration,12\n14,Graph Futures,1\n15,Modeling Basics,2|3|4\n16,Directed Graphs,2|3\n17,Undirected Graphs,16\n18,Weighted Edges,3\n19,Unweighted Edges,18\n20,Multiplicity,4\n21,Indexing in Graphs,7\n22,Graph Traversal,5\n23,Pattern Matching,22\n24,Graph Merging,7\n25,Graph Splitting,24\n26,Graph Updates,22\n27,Graph Integrity,1|4\n28,Graph Constraints,27\n29,Graph Normalization,28\n30,Graph Aggregation,29\n31,Schema Evolution,7|26\n32,Graph Versioning,31\n33,Graph Data Import,1\n34,Graph Data Export,33\n35,Hierarchical Nodes,2\n36,Hyperedges,3\n37,Multi-Graphs,1\n38,Loops and Cycles,22\n39,Graph Isomorphism,23\n40,Graph Sampling,39\n41,Customer Node,2|4\n42,Individual Customer,41\n43,Corporate Customer,41\n44,Organizational Roles,43\n45,License Modeling,4\n46,Abuse Detection,23\n47,Fraud Indicators,46\n48,Customer Churn,42\n49,Customer Segments,42|43\n50,Customer Profiles,49\n51,Product Node,2|4\n52,Product Listing,51\n53,Product Group,52\n54,Taxonomy Node,4\n55,Multi-Taxonomy,54\n56,Product Classification,55\n57,Product Metadata,56\n58,SKU Linking,51\n59,Catalog Graph,51\n60,Product Bundles,53\n61,Location Node,2|4\n62,Address Node,61\n63,City Graph,62\n64,County Graph,63\n65,State Graph,64\n66,Metro Region,65\n67,Urban vs Rural,66\n68,Road Network,61\n69,Distance Calc,68\n70,Geo-Spatial Model,61|5\n71,Datetime Node,2|4\n72,Time Tree,71\n73,Financial Time,72\n74,Temporal Exceptions,72\n75,Temporal Indexes,71|21\n76,Temporal Queries,75\n77,Temporal Alignments,76\n78,Historical Graphs,72\n79,Future Projections,78\n80,Time Granularity,71\n81,Knowledge Graph,1\n82,SKOS Concepts,81\n83,Concept Node,2|81\n84,Labels &amp; Notation,4|83\n85,Broader Concepts,83\n86,Narrower Concepts,85\n87,Concept Schemas,83|31\n88,Semantic Layers,81\n89,Concept Hierarchies,83\n90,Semantic Reasoning,88|87\n91,NLP Integration,11|13\n92,Word Node,2|91\n93,Sentence Node,92\n94,Paragraph Node,93\n95,Document Node,94\n96,Doc Pipelines,95\n97,Text Classification,91\n98,Embeddings,91|92\n99,WordNet Case,92|83\n100,Text Summarization,95|98\n101,Fraud Patterns,47\n102,AML Modeling,101\n103,Unusual Relations,23\n104,Investigation Paths,103\n105,Suspicious Entities,101\n106,Threat Modeling,22\n107,Vulnerability Node,2|106\n108,Threat Prioritization,107\n109,Person Roles,2|44\n110,Data Movement Anomaly,105\n111,Patient Node,2|4\n112,Disease Spread,111|22\n113,Healthcare Costs,111\n114,Value-Based Care,113\n115,Entity Resolution,1\n116,Similar Attribute,4|115\n117,Similarity Metrics,116\n118,Duplicate Detection,117\n119,Merge Rules,24|118\n120,Identity Graph,115\n121,Building Models,1\n122,Manufacturing Graph,1\n123,Supply Chain Node,2|4\n124,Scene Graph,2|3\n125,Pixel Classes,124\n126,Motion Prediction,124|72\n127,Autonomous Vehicles,126\n128,Robotics Integration,124\n129,Process Graphs,1|2\n130,Workflow Events,129\n131,Rule Engine,1\n132,Rule Workflow,131|130\n133,Decision Tree,131\n134,Validation Rules,133\n135,Data Mining,1|91\n136,Rule Exchange,132\n137,Code Graphs,1\n138,Call Graph,137\n139,Coverage Graph,138\n140,Code Quality,139\n141,Learning Graphs,1\n142,Concept Dependency,83\n143,Content Models,83|95\n144,Learning Paths,141|142\n145,Concept Recommender,144\n146,Intelligent Textbooks,145|95\n147,Correlation vs Causation,10\n148,Causal Graph,147\n149,Data Lineage,1|4\n150,Graph Storytelling,90|149\n</code></pre>"},{"location":"prompts/04-taxonomy/","title":"Concept Taxonomy","text":""},{"location":"prompts/04-taxonomy/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>Now lets focus again on the 150 concepts you have generated. Your task is to organize these concepts into a small taxonomy of approximately ten classifiers.  You will generate a list of the classifier labels.</p> <p>Here are some suggestions.  The first category is \"Foundational Concepts\". These are concepts that are introduced at the start of the course and are considered prerequisites. A second category is \"Concept Definitions\" where we introduce new terms. One category might be \"Domain Specific Models\" A last category can be \"Miscellaneous\". Your task is to create the rest of the classifiers and give each classifier a label and definition. Each category should include concepts that share similar characteristics, functions, or applications. Attempt to create a taxonomy that will evenly divide the 150 concepts into a somewhat balanced taxonomy.</p>"},{"location":"prompts/04-taxonomy/#response","title":"Response","text":"<p>Below is an example taxonomy of ten classifiers, each with a label and a definition. The 150 concepts are divided as evenly as possible across these ten categories. In practice, some concepts could potentially fit in multiple categories, but here they are assigned to only one for clarity.</p> <p>1. Foundational Concepts Definition: Core principles and fundamental notions that establish the groundwork of graph data modeling. These concepts introduce basic elements like nodes, edges, and properties, as well as fundamental distinctions between data, information, and knowledge. Concepts (15): (1) Graph Data Model (2) Node (3) Edge (4) Property (5) Path (10) Data vs Info (11) Knowledge vs Data (12) Model vs Algorithm (14) Graph Futures (15) Modeling Basics (16) Directed Graphs (17) Undirected Graphs (18) Weighted Edges (19) Unweighted Edges (20) Multiplicity</p> <p>2. Graph Structures and Operations Definition: Techniques and features that define, query, manipulate, and maintain the structural integrity of graph data. These concepts cover schemas, indexing, constraints, traversals, and normalization. Concepts (15): (6) Dependency (7) Graph Schema (8) Graph Query Lang (9) ISO GQL (21) Indexing in Graphs (22) Graph Traversal (23) Pattern Matching (24) Graph Merging (25) Graph Splitting (26) Graph Updates (27) Graph Integrity (28) Graph Constraints (29) Graph Normalization (30) Graph Aggregation (31) Schema Evolution</p> <p>3. Data Management and Evolution Definition: Concepts related to the life cycle of graph data, including importing, exporting, versioning, and handling complex or specialized graph structures such as hierarchical nodes, hyperedges, and multi-graphs. Concepts (15): (32) Graph Versioning (33) Graph Data Import (34) Graph Data Export (35) Hierarchical Nodes (36) Hyperedges (37) Multi-Graphs (38) Loops and Cycles (39) Graph Isomorphism (40) Graph Sampling (121) Building Models (141) Learning Graphs (149) Data Lineage (150) Graph Storytelling (80) Time Granularity (79) Future Projections</p> <p>4. Temporal and Spatial Modeling Definition: Modeling concepts focused on representing and analyzing data that changes over time or varies across geographic locations. This category includes time trees, geospatial models, and related structures. Concepts (15): (61) Location Node (62) Address Node (63) City Graph (64) County Graph (65) State Graph (66) Metro Region (67) Urban vs Rural (68) Road Network (69) Distance Calc (70) Geo-Spatial Model (71) Datetime Node (72) Time Tree (73) Financial Time (74) Temporal Exceptions (75) Temporal Indexes</p> <p>5. Semantic and Knowledge-Based Modeling Definition: Advanced concepts that introduce semantics, knowledge layers, ontologies, and reasoning into graph models. This includes knowledge graphs, SKOS, concept nodes, and semantic reasoning frameworks. Concepts (15): (81) Knowledge Graph (82) SKOS Concepts (83) Concept Node (84) Labels &amp; Notation (85) Broader Concepts (86) Narrower Concepts (87) Concept Schemas (88) Semantic Layers (89) Concept Hierarchies (90) Semantic Reasoning (142) Concept Dependency (143) Content Models (144) Learning Paths (145) Concept Recommender (146) Intelligent Textbooks</p> <p>6. Textual and Language Modeling Definition: Concepts that incorporate natural language processing, textual representations, embeddings, and document structures into graph data models, enabling language-based analytics and understanding. Concepts (15): (13) LLM Integration (91) NLP Integration (92) Word Node (93) Sentence Node (94) Paragraph Node (95) Document Node (96) Doc Pipelines (97) Text Classification (98) Embeddings (99) WordNet Case (100) Text Summarization (135) Data Mining (45) License Modeling (associated with text-based metadata) (84) Labels &amp; Notation (already used in semantic, replace it) Replace (84) with another textual concept not yet used. \"Labels &amp; Notation\" was already used in semantic.</p> <p>Instead, add (116) Similar Attribute (as text analysis often involves similarity metrics): (116) Similar Attribute (117) Similarity Metrics</p> <p>Revised Textual and Language Modeling list (15): (13) LLM Integration (91) NLP Integration (92) Word Node (93) Sentence Node (94) Paragraph Node (95) Document Node (96) Doc Pipelines (97) Text Classification (98) Embeddings (99) WordNet Case (100) Text Summarization (135) Data Mining (116) Similar Attribute (117) Similarity Metrics (45) License Modeling (assuming textual licenses and metadata)</p> <p>7. Customer and Fraud Modeling Definition: Domain-specific concepts related to representing customers, detecting fraud, and modeling behaviors, segments, and suspicious entities. Concepts (15): (41) Customer Node (42) Individual Customer (43) Corporate Customer (44) Organizational Roles (46) Abuse Detection (47) Fraud Indicators (48) Customer Churn (49) Customer Segments (50) Customer Profiles (101) Fraud Patterns (102) AML Modeling (103) Unusual Relations (104) Investigation Paths (105) Suspicious Entities (119) Merge Rules (used to integrate duplicate customer records)</p> <p>8. Product and Supply Chain Modeling Definition: Domain-specific concepts focusing on product data, taxonomies, classifications, and related supply chain structures. Concepts (15): (51) Product Node (52) Product Listing (53) Product Group (54) Taxonomy Node (55) Multi-Taxonomy (56) Product Classification (57) Product Metadata (58) SKU Linking (59) Catalog Graph (60) Product Bundles (122) Manufacturing Graph (123) Supply Chain Node (118) Duplicate Detection (for product data matching) (120) Identity Graph (for tracking product identities) (143) Content Models was used in semantic, need another not used before. Replace (143) with (146) Intelligent Textbooks was used, need another concept.</p> <p>Check unused concepts that fit product/supply chain: Try (109) Person Roles was used? Yes in Customer category. (121) Building Models used in category 3. (106) Threat Modeling fits better in security.</p> <p>Try (135) Data Mining was used in textual. (136) Rule Exchange - more business rules. (137) Code Graphs - not product related. (124) Scene Graph - unrelated. (125) Pixel Classes - scene. (126) Motion Prediction - scene. (127) Autonomous Vehicles - scene. (128) Robotics Integration - scene. (129) Process Graphs - general business. (130) Workflow Events - business. (131) Rule Engine - business rules. (132) Rule Workflow - business. (133) Decision Tree - business rules. (134) Validation Rules - business rules. (136) Rule Exchange - business rules. (138) Call Graph - code (139) Coverage Graph - code (140) Code Quality - code (141) Learning Graphs used in category 3. (142) Concept Dependency used in semantic. (144) Learning Paths used in semantic. (145) Concept Recommender used in semantic. (146) Intelligent Textbooks used in semantic. (147) Correlation vs Cause - advanced analytics (148) Causal Graph - advanced analytics</p> <p>Let's pick a concept that can loosely relate to product/supply chain (e.g., (125) Pixel Classes doesn't fit): We must pick something not assigned yet: (106) Threat Modeling is closer to security than product. (107) Vulnerability Node - security. (108) Threat Prioritization - security. (109) Person Roles - used in customer. (110) Data Movement Anomaly - security. (111) Patient Node - healthcare. (112) Disease Spread - healthcare. (113) Healthcare Costs - healthcare. (114) Value-Based Care - healthcare. (115) Entity Resolution - foundational data matching (not used yet). Yes, Entity Resolution (115) can help in product duplicates and supply chain relationships.</p> <p>Final Product and Supply Chain list: (51,52,53,54,55,56,57,58,59,60,122,123,118,120,115)</p> <p>9. Healthcare and Security Modeling Definition: Domain-specific modeling for healthcare data, disease spread, value-based care, as well as security threats, vulnerabilities, and suspicious data movements. Concepts (15): (106) Threat Modeling (107) Vulnerability Node (108) Threat Prioritization (109) Person Roles (110) Data Movement Anomaly (111) Patient Node (112) Disease Spread (113) Healthcare Costs (114) Value-Based Care (124) Scene Graph (not really healthcare or security, need a better fit - move Scene Graph to next category) Replace 124 with (129) Process Graphs (generic but can apply to healthcare processes) (129) Process Graphs (130) Workflow Events (could apply to healthcare or security workflows) (131) Rule Engine (rules for compliance or security policies) (132) Rule Workflow (133) Decision Tree (used in healthcare decision-making and security diagnostics)</p> <p>10. Scenes, Robotics, Causality, and Advanced Analytics (Miscellaneous Advanced Topics) Definition: Advanced modeling areas including scene understanding, robotics, autonomous vehicles, causal inference, lineage, and various specialized analytical tools that extend beyond basic domain models. Concepts (15): (124) Scene Graph (125) Pixel Classes (126) Motion Prediction (127) Autonomous Vehicles (128) Robotics Integration (134) Validation Rules (136) Rule Exchange (137) Code Graphs (138) Call Graph (139) Coverage Graph (140) Code Quality (147) Correlation vs Cause (148) Causal Graph (74) Temporal Exceptions (moved from temporal, we had too many there; treat as advanced) (76) Temporal Queries (also advanced queries)</p>"},{"location":"prompts/04-taxonomy/#final-taxonomy-labels-definitions","title":"Final Taxonomy (Labels &amp; Definitions)","text":"<ol> <li> <p>Foundational Concepts Core principles and basic graph elements, introducing the distinction between data, information, and knowledge.</p> </li> <li> <p>Graph Structures and Operations Structural tools and methods for defining, querying, and maintaining graph data integrity and schemas.</p> </li> <li> <p>Data Management and Evolution Concepts dealing with the graph data lifecycle, including importing, exporting, versioning, and managing complex structures.</p> </li> <li> <p>Temporal and Spatial Modeling Techniques for representing and analyzing geographically and temporally varying data in graphs.</p> </li> <li> <p>Semantic and Knowledge-Based Modeling Advanced concepts embedding semantics, ontologies, and reasoning into the graph ecosystem.</p> </li> <li> <p>Textual and Language Modeling Integrating NLP and textual data representations with graph structures for deeper language-based insights.</p> </li> <li> <p>Customer and Fraud Modeling Domain-specific methods for modeling customer entities, detecting fraud, and understanding customer behavior.</p> </li> <li> <p>Product and Supply Chain Modeling Representing products, classifications, and supply chain entities in graphs to manage inventories, taxonomies, and product data.</p> </li> <li> <p>Healthcare and Security Modeling Domain-focused modeling for healthcare data and security threats, including vulnerabilities, suspicious activities, and clinical processes.</p> </li> <li> <p>Scenes, Robotics, Causality, and Advanced Analytics (Miscellaneous) Specialized and emerging areas that extend graph modeling into scenes, robotics, causal inference, code analysis, and advanced analytical frameworks.</p> </li> </ol>"},{"location":"prompts/05-classify/","title":"Classify","text":"<p>Very Good.  Lets call the number associated with each category the TaxonomyID. Next, for each line in the CSV file, add another column that has the primary TaxonomyID of the Concept. Return a new CSV file with with 150 rows.</p> <p>The CSV file will have the following format:</p> <ol> <li>Column 1: ConceptID</li> <li>Column 2: ConceptLabel</li> <li>Column 3: Dependencies</li> <li>Column 4: TaxonomyID</li> </ol>"},{"location":"prompts/05-classify/#result","title":"Result","text":"<pre><code>ConceptID,ConceptLabel,DependsOn,TaxonomyID\n1,Graph Data Model,,1\n2,Node,,1\n3,Edge,,1\n4,Property,,1\n5,Path,,1\n10,Data vs Info,1,1\n11,Knowledge vs Data,10,1\n12,Model vs Algorithm,11,1\n14,Graph Futures,1,1\n15,Modeling Basics,2|3|4,1\n16,Directed Graphs,2|3,1\n17,Undirected Graphs,16,1\n18,Weighted Edges,3,1\n19,Unweighted Edges,18,1\n20,Multiplicity,4,1\n\n6,Dependency,2|3,2\n7,Graph Schema,1,2\n8,Graph Query Lang,1,2\n9,ISO GQL,8,2\n21,Indexing in Graphs,7,2\n22,Graph Traversal,5,2\n23,Pattern Matching,22,2\n24,Graph Merging,7,2\n25,Graph Splitting,24,2\n26,Graph Updates,22,2\n27,Graph Integrity,1|4,2\n28,Graph Constraints,27,2\n29,Graph Normalization,28,2\n30,Graph Aggregation,29,2\n31,Schema Evolution,7|26,2\n\n32,Graph Versioning,31,3\n33,Graph Data Import,1,3\n34,Graph Data Export,33,3\n35,Hierarchical Nodes,2,3\n36,Hyperedges,3,3\n37,Multi-Graphs,1,3\n38,Loops and Cycles,22,3\n39,Graph Isomorphism,23,3\n40,Graph Sampling,39,3\n79,Future Projections,14,3\n80,Time Granularity,71,3\n121,Building Models,1,3\n141,Learning Graphs,1,3\n149,Data Lineage,1|4,3\n150,Graph Storytelling,90|149,3\n\n61,Location Node,2|4,4\n62,Address Node,61,4\n63,City Graph,62,4\n64,County Graph,63,4\n65,State Graph,64,4\n66,Metro Region,65,4\n67,Urban vs Rural,66,4\n68,Road Network,61,4\n69,Distance Calc,68,4\n70,Geo-Spatial Model,61|5,4\n71,Datetime Node,2|4,4\n72,Time Tree,71,4\n73,Financial Time,72,4\n74,Temporal Exceptions,72,4\n75,Temporal Indexes,71|21,4\n\n81,Knowledge Graph,1,5\n82,SKOS Concepts,81,5\n83,Concept Node,2|81,5\n84,Labels &amp; Notation,4|83,5\n85,Broader Concepts,83,5\n86,Narrower Concepts,85,5\n87,Concept Schemas,83|31,5\n88,Semantic Layers,81,5\n89,Concept Hierarchies,83,5\n90,Semantic Reasoning,88|87,5\n142,Concept Dependency,83,5\n143,Content Models,83|95,5\n144,Learning Paths,141|142,5\n145,Concept Recommender,144,5\n146,Intelligent Textbooks,145|95,5\n\n13,LLM Integration,12,6\n91,NLP Integration,11|13,6\n92,Word Node,2|91,6\n93,Sentence Node,92,6\n94,Paragraph Node,93,6\n95,Document Node,94,6\n96,Doc Pipelines,95,6\n97,Text Classification,91,6\n98,Embeddings,91|92,6\n99,WordNet Case,92|83,6\n100,Text Summarization,95|98,6\n135,Data Mining,1|91,6\n116,Similar Attribute,4|115,6\n117,Similarity Metrics,116,6\n45,License Modeling,4,6\n\n41,Customer Node,2|4,7\n42,Individual Customer,41,7\n43,Corporate Customer,41,7\n44,Organizational Roles,43,7\n46,Abuse Detection,23,7\n47,Fraud Indicators,46,7\n48,Customer Churn,42,7\n49,Customer Segments,42|43,7\n50,Customer Profiles,49,7\n101,Fraud Patterns,47,7\n102,AML Modeling,101,7\n103,Unusual Relations,23,7\n104,Investigation Paths,103,7\n105,Suspicious Entities,101,7\n119,Merge Rules,24|118,7\n\n51,Product Node,2|4,8\n52,Product Listing,51,8\n53,Product Group,52,8\n54,Taxonomy Node,4,8\n55,Multi-Taxonomy,54,8\n56,Product Classification,55,8\n57,Product Metadata,56,8\n58,SKU Linking,51,8\n59,Catalog Graph,51,8\n60,Product Bundles,53,8\n122,Manufacturing Graph,1,8\n123,Supply Chain Node,2|4,8\n118,Duplicate Detection,117,8\n120,Identity Graph,115,8\n115,Entity Resolution,1,8\n\n106,Threat Modeling,22,9\n107,Vulnerability Node,2|106,9\n108,Threat Prioritization,107,9\n109,Person Roles,2|44,9\n110,Data Movement Anomaly,105,9\n111,Patient Node,2|4,9\n112,Disease Spread,111|22,9\n113,Healthcare Costs,111,9\n114,Value-Based Care,113,9\n129,Process Graphs,1|2,9\n130,Workflow Events,129,9\n131,Rule Engine,1,9\n132,Rule Workflow,131|130,9\n133,Decision Tree,131,9\n134,Validation Rules,133,9\n\n124,Scene Graph,2|3,10\n125,Pixel Classes,124,10\n126,Motion Prediction,124|72,10\n127,Autonomous Vehicles,126,10\n128,Robotics Integration,124,10\n136,Rule Exchange,132,10\n137,Code Graphs,1,10\n138,Call Graph,137,10\n139,Coverage Graph,138,10\n140,Code Quality,139,10\n147,Correlation vs Cause,10,10\n148,Causal Graph,147,10\n76,Temporal Queries,75,10\n77,Temporal Alignments,76,10\n78,Historical Graphs,72,10\n</code></pre>"},{"location":"sims/","title":"List of Sims","text":"<p>The following is a list of MicroSims that support this course on graph data modeling.</p> <p>Learning Graph</p>"},{"location":"sims/customer-graph/","title":"Customer Graph","text":""},{"location":"sims/learning-graph/","title":"Learning Graph","text":"<p>Graph Viewer</p>"}]}